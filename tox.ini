# Tox configuration for FTT (File Type Tester)
# This file provides comprehensive testing environments for multiple Python versions
# and various quality assurance tools.

[tox]
min_version = 4.0
env_list =
    py{38,39,310,311,312,313}
    lint
    type
    security
    coverage
    docs
isolated_build = true
skip_missing_interpreters = true

[testenv]
description = Run tests with pytest
package = wheel
wheel_build_env = .pkg
deps =
    pytest>=7.0
    pytest-cov>=4.0
commands =
    pytest {posargs}

[testenv:py{38,39,310,311,312,313}]
description = Run tests on Python {basepython}
deps =
    {[testenv]deps}
commands =
    pytest --cov=ftt --cov-report=term-missing --cov-fail-under=50 {posargs}

[testenv:lint]
description = Run linting tools (black, isort, flake8)
skip_install = true
deps =
    black>=23.0
    isort>=5.0
    flake8>=6.0
    flake8-pyproject>=1.0
commands =
    black --check --diff src tests scripts
    isort --check-only --diff src tests scripts
    flake8 src tests scripts

[testenv:format]
description = Format code with black and isort
skip_install = true
deps =
    black>=23.0
    isort>=5.0
commands =
    black src tests scripts
    isort src tests scripts

[testenv:type]
description = Run type checking with mypy
deps =
    mypy>=1.0
    lxml>=4.0
    types-setuptools
    pytest>=7.0
commands =
    mypy src tests scripts

[testenv:security]
description = Run security checks with bandit
skip_install = true
deps =
    bandit>=1.7
commands =
    bandit -r src -f json -o bandit-report.json
    bandit -r src

[testenv:coverage]
description = Run tests with full coverage reporting
deps =
    pytest>=7.0
    coverage[toml]>=7.0
commands =
    coverage run --source=src -m pytest --override-ini="addopts="
    coverage report --show-missing
    coverage html
    coverage xml

[testenv:docs]
description = Build documentation (placeholder for future docs)
skip_install = true
deps =
    sphinx>=5.0
    sphinx-rtd-theme>=1.0
allowlist_externals = echo
commands =
    echo "Documentation build placeholder - implement when docs are added"
    echo "To add docs: create docs/ directory with conf.py and index.rst"

[testenv:clean]
description = Clean up build artifacts and cache files
skip_install = true
allowlist_externals =
    rm
    find
commands =
    rm -rf build/
    rm -rf dist/
    rm -rf src/*.egg-info/
    rm -rf .pytest_cache/
    rm -rf .mypy_cache/
    rm -rf .coverage
    rm -rf htmlcov/
    rm -rf coverage.xml
    rm -rf bandit-report.json
    find . -type d -name __pycache__ -exec rm -rf {} +
    find . -type f -name "*.pyc" -delete

[testenv:build]
description = Build wheel and source distribution
skip_install = true
deps =
    build>=0.10
    twine>=4.0
commands =
    python -m build
    twine check dist/*

[testenv:dev]
description = Development environment with all tools
deps =
    {[testenv]deps}
    black>=23.0
    flake8>=6.0
    flake8-pyproject>=1.0
    mypy>=1.0
    lxml>=4.0
    isort>=5.0
    bandit>=1.7
    pre-commit>=3.0
commands =
    python -c "print('Development environment ready!')"
    python -c "import ftt; print(f'FTT version: {ftt.__version__}')"
    python -c "print('Available tox environments:')"
    tox -l

[testenv:all]
description = Run all quality checks and tests
deps =
    {[testenv:coverage]deps}
    {[testenv:lint]deps}
    {[testenv:type]deps}
    {[testenv:security]deps}
commands =
    {[testenv:lint]commands}
    {[testenv:type]commands}
    {[testenv:security]commands}
    {[testenv:coverage]commands}

[testenv:quick]
description = Quick test run (no coverage)
deps =
    pytest>=7.0
    pytest-cov>=4.0
commands =
    pytest --tb=short --no-cov {posargs}

[testenv:verbose]
description = Verbose test run with detailed output
deps =
    {[testenv]deps}
commands =
    pytest -v --cov=ftt --cov-report=term-missing --cov-report=html {posargs}

# Environment for testing specific Python versions
[testenv:py38-test]
basepython = python3.8
description = Test specifically on Python 3.8
deps = {[testenv]deps}
commands = {[testenv:py{38,39,310,311,312,313}]commands}

[testenv:py39-test]
basepython = python3.9
description = Test specifically on Python 3.9
deps = {[testenv]deps}
commands = {[testenv:py{38,39,310,311,312,313}]commands}

[testenv:py310-test]
basepython = python3.10
description = Test specifically on Python 3.10
deps = {[testenv]deps}
commands = {[testenv:py{38,39,310,311,312,313}]commands}

[testenv:py311-test]
basepython = python3.11
description = Test specifically on Python 3.11
deps = {[testenv]deps}
commands = {[testenv:py{38,39,310,311,312,313}]commands}

[testenv:py312-test]
basepython = python3.12
description = Test specifically on Python 3.12
deps = {[testenv]deps}
commands = {[testenv:py{38,39,310,311,312,313}]commands}

[testenv:py313-test]
basepython = python3.13
description = Test specifically on Python 3.13
deps = {[testenv]deps}
commands = {[testenv:py{38,39,310,311,312,313}]commands}
